{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\studies\\\\myapp\\\\src\\\\Component\\\\CancelPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CancelPage(props) {\n  _s();\n\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // const isPassValid = (p) => p.length >= 8  ? true : false\n\n  const isPasswordValid = () => {\n    let couner = 0;\n\n    if (password != \"\" && password == confirmPassword) {\n      console.log(\"good\");\n    }\n\n    if (confirmPassword == props.user.password) {\n      console.log(\"verygood\");\n      props.changePage(\"helpbtn\");\n    }\n\n    while (props.user.password != confirmPassword && ++couner < 3) {\n      inputPass = prompt('Please enter your password:');\n    }\n\n    if (couner == 3) {\n      console.log(\"ok\");\n    } else {\n      console.log(\"again\");\n    } // הגבלת מספר לחיצות בעזרת אינדקס\n    // if password && confirm not empty!!\n    // if password and confirm are equal!!\n    // if password local and user password are equal \n    // if one of them is failed count it (3 tries)\n    // if (props.user.password ==)\n\n  }; // לפי הסדר הבא:\n  // תנאי ראשון: האם שדה הסיסמה ושדה האישור סיסמה רייקים\n  // תנאי שני: האם שדה הסימה ושדה אישור סיסמה שווים\n  // תנאי שלישי: האם השדות שוים לסיסמה של היוזר מעמוד הרישום\n  // תנאי רביעי: האם נעשו 3 נסיונות אם כן חסימה \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setConfirmPassword(e.target.value),\n      placeholder: \"confirm password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 115\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      on: true,\n      onClick: isPasswordValid,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CancelPage, \"D3jY+V26jdXAROGyXFCEvChHg2E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CancelPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CancelPage\");","map":{"version":3,"names":["React","useState","useNavigate","CancelPage","props","confirmPassword","setConfirmPassword","password","setPassword","navigate","isPasswordValid","couner","console","log","user","changePage","inputPass","prompt","e","target","value"],"sources":["C:/Users/ADMIN/Desktop/studies/myapp/src/Component/CancelPage.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CancelPage(props) {\r\n\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const navigate = useNavigate()\r\n\r\n// const isPassValid = (p) => p.length >= 8  ? true : false\r\n\r\n    const isPasswordValid = ()=> {\r\n        let couner = 0;\r\n           if(password != \"\" && password == confirmPassword) {\r\n            console.log(\"good\")\r\n        } if(confirmPassword == props.user.password){\r\n            console.log(\"verygood\")\r\n            props.changePage(\"helpbtn\")\r\n            \r\n        } while (props.user.password != confirmPassword && ++couner < 3) {\r\n            inputPass = prompt('Please enter your password:');\r\n        }\r\n        if (couner == 3) {\r\n            console.log(\"ok\")\r\n        }else {\r\n            console.log(\"again\")\r\n        }\r\n        \r\n       \r\n        // הגבלת מספר לחיצות בעזרת אינדקס\r\n        // if password && confirm not empty!!\r\n        // if password and confirm are equal!!\r\n        // if password local and user password are equal \r\n        // if one of them is failed count it (3 tries)\r\n        // if (props.user.password ==)\r\n    }\r\n\r\n    // לפי הסדר הבא:\r\n    // תנאי ראשון: האם שדה הסיסמה ושדה האישור סיסמה רייקים\r\n    // תנאי שני: האם שדה הסימה ושדה אישור סיסמה שווים\r\n    // תנאי שלישי: האם השדות שוים לסיסמה של היוזר מעמוד הרישום\r\n    // תנאי רביעי: האם נעשו 3 נסיונות אם כן חסימה \r\n  return (\r\n    <div>\r\n        <input type=\"text\" onChange={(e)=>setPassword(e.target.value)} placeholder= {\"password\"} />\r\n        <input type=\"text\" onChange={(e)=>setConfirmPassword(e.target.value)} placeholder= {\"confirm password\"}/> <br />\r\n        <button on onClick={isPasswordValid}>Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EAEtC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMQ,QAAQ,GAAGP,WAAW,EAA5B,CAJsC,CAM1C;;EAEI,MAAMQ,eAAe,GAAG,MAAK;IACzB,IAAIC,MAAM,GAAG,CAAb;;IACG,IAAGJ,QAAQ,IAAI,EAAZ,IAAkBA,QAAQ,IAAIF,eAAjC,EAAkD;MACjDO,OAAO,CAACC,GAAR,CAAY,MAAZ;IACH;;IAAC,IAAGR,eAAe,IAAID,KAAK,CAACU,IAAN,CAAWP,QAAjC,EAA0C;MACxCK,OAAO,CAACC,GAAR,CAAY,UAAZ;MACAT,KAAK,CAACW,UAAN,CAAiB,SAAjB;IAEH;;IAAC,OAAOX,KAAK,CAACU,IAAN,CAAWP,QAAX,IAAuBF,eAAvB,IAA0C,EAAEM,MAAF,GAAW,CAA5D,EAA+D;MAC7DK,SAAS,GAAGC,MAAM,CAAC,6BAAD,CAAlB;IACH;;IACD,IAAIN,MAAM,IAAI,CAAd,EAAiB;MACbC,OAAO,CAACC,GAAR,CAAY,IAAZ;IACH,CAFD,MAEM;MACFD,OAAO,CAACC,GAAR,CAAY,OAAZ;IACH,CAfwB,CAkBzB;IACA;IACA;IACA;IACA;IACA;;EACH,CAxBD,CARsC,CAkCtC;EACA;EACA;EACA;EACA;;;EACF,oBACE;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAGK,CAAD,IAAKV,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7C;MAA+D,WAAW,EAAG;IAA7E;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAGF,CAAD,IAAKZ,kBAAkB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAApD;MAAsE,WAAW,EAAG;IAApF;MAAA;MAAA;MAAA;IAAA,QAFJ,oBAE8G;MAAA;MAAA;MAAA;IAAA,QAF9G,eAGI;MAAQ,EAAE,MAAV;MAAW,OAAO,EAAEV,eAApB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA9CuBP,U;UAIHD,W;;;KAJGC,U"},"metadata":{},"sourceType":"module"}
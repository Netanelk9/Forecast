{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\studies\\\\myapp\\\\src\\\\Component\\\\TasksPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Table from './Table';\nimport Manu from './Manu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TasksPage() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [historyTask, setHistoryTask] = useState(\"\");\n\n  const getAllTasks = () => {\n    fetch('/tasks').then(res => res.json()).then(data => setTasks(data));\n  };\n\n  useEffect(getAllTasks, []);\n\n  const endTask = index => {\n    // update history task\n    // \n    tasks = [index];\n  };\n\n  let tasksa = [\"A\", \"B\", \"C\"];\n  let history = [\"TTT\"];\n  let index = 2; // lets swicth \"B\"  index = 1\n  // setHistory([...history, tasks[index]]) // REACT\n\n  history = [...history, tasks[index]]; // JS\n\n  let tempTasks = tasks;\n  tempTasks.splice(index, 1);\n  tasks = tempTasks; // JS\n  // setTasks(tempTasks) // REACT\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Manu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      list: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TasksPage, \"MJItX6mvxRMhJoMCG5iRP1P9zCs=\");\n\n_c = TasksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useEffect","useState","Table","Manu","TasksPage","tasks","setTasks","historyTask","setHistoryTask","getAllTasks","fetch","then","res","json","data","endTask","index","tasksa","history","tempTasks","splice"],"sources":["C:/Users/ADMIN/Desktop/studies/myapp/src/Component/TasksPage.jsx"],"sourcesContent":["import React, {  useEffect, useState } from 'react';\r\nimport Table from './Table';\r\nimport Manu from './Manu';\r\n\r\n\r\n\r\nexport default function TasksPage() {\r\n\r\n  const [tasks, setTasks] = useState([])\r\n  const [historyTask, setHistoryTask] = useState(\"\")\r\n\r\n  const getAllTasks =() => {\r\n    fetch('/tasks')\r\n    .then(res => res.json())\r\n    .then(data =>setTasks(data))\r\n  }\r\n\r\n  useEffect(getAllTasks,[])\r\n\r\nconst endTask = (index) => {\r\n  // update history task\r\n  // \r\n  tasks=[index]\r\n}\r\n\r\nlet tasksa = [\"A\", \"B\", \"C\"]\r\nlet history = [\"TTT\"]\r\nlet index = 2\r\n\r\n// lets swicth \"B\"  index = 1\r\n\r\n// setHistory([...history, tasks[index]]) // REACT\r\nhistory = [...history, tasks[index]] // JS\r\n\r\nlet tempTasks = tasks\r\ntempTasks.splice(index, 1)\r\ntasks = tempTasks // JS\r\n// setTasks(tempTasks) // REACT\r\n\r\n  return (\r\n    <div>\r\n       <Manu/>\r\n       <Table list={tasks} /> \r\n       \r\n    </div>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAIA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAElC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMQ,WAAW,GAAE,MAAM;IACvBC,KAAK,CAAC,QAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAGR,QAAQ,CAACQ,IAAD,CAFrB;EAGD,CAJD;;EAMAd,SAAS,CAACS,WAAD,EAAa,EAAb,CAAT;;EAEF,MAAMM,OAAO,GAAIC,KAAD,IAAW;IACzB;IACA;IACAX,KAAK,GAAC,CAACW,KAAD,CAAN;EACD,CAJD;;EAMA,IAAIC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAb;EACA,IAAIC,OAAO,GAAG,CAAC,KAAD,CAAd;EACA,IAAIF,KAAK,GAAG,CAAZ,CArBoC,CAuBpC;EAEA;;EACAE,OAAO,GAAG,CAAC,GAAGA,OAAJ,EAAab,KAAK,CAACW,KAAD,CAAlB,CAAV,CA1BoC,CA0BC;;EAErC,IAAIG,SAAS,GAAGd,KAAhB;EACAc,SAAS,CAACC,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;EACAX,KAAK,GAAGc,SAAR,CA9BoC,CA8BlB;EAClB;;EAEE,oBACE;IAAA,wBACG,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QADH,eAEG,QAAC,KAAD;MAAO,IAAI,EAAEd;IAAb;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAxCuBD,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}
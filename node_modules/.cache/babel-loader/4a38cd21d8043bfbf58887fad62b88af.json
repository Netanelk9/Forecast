{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\studies\\\\myapp\\\\src\\\\components\\\\HomePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport FiveDays from './FiveDays';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage(props) {\n  _s();\n\n  const API_KEY = 'AMn2HUVjVbYVX21t7LFEXOQMHW5cpMlS'; // const API_KEY = 'mf7ATNQVNyhudAntt7XxOxAyaRcVAS3K'\n  // const API_KEY = 'WebHzrX0S4ZGR1xqMmgg9s1cMgcjL6CE'\n  // mf7ATNQVNyhudAntt7XxOxAyaRcVAS3K\n\n  const condotion = {\n    WeatherText: \"Mostly sunny\",\n    Temperature: {\n      Metric: {\n        Value: 23.5\n      }\n    }\n  };\n  const cityAutocomplete = {\n    Key: \"215854\",\n    LocalizedName: \"Tel Aviv\"\n  };\n  const [city, setCity] = useState(cityAutocomplete);\n  const [cityKey, setCityKey] = useState(cityAutocomplete.Key);\n  const [currentCondtion, setCurrentCondtion] = useState(condotion);\n\n  const favoriteBtn = () => {\n    props.saveFavoriteCity(cityKey);\n  };\n\n  const fetchCityCondition = cityName => {\n    fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${cityName}`).then(res => res.json()).then(data => {\n      setCityKey(data[0].Key);\n      setCity(data[0]); // setCities(data) - continue with autocomplete\n    }); // do with useEfect - [cityKey]\n    // fetch(`http://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${API_KEY}`)\n    // .then((res)=>res.json())\n    // .then((data)=>setCurrentCondtion(data[0]))\n  }; // useEffect(()=>{\n  //   fetchCityCondition(\"tel aviv\")\n  // }, [])\n\n\n  const getCityAutocomplete = e => {\n    fetchCityCondition(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      onChange: getCityAutocomplete,\n      placeholder: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"largeBtn\",\n      onClick: favoriteBtn,\n      children: \"Add to favorite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 82\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      title: city.LocalizedName,\n      tempaure: currentCondtion.Temperature.Metric.Value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"e0L+VQ/Bqlb5bsHq6xoLdpqv1Wk=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","FiveDays","HomePage","props","API_KEY","condotion","WeatherText","Temperature","Metric","Value","cityAutocomplete","Key","LocalizedName","city","setCity","cityKey","setCityKey","currentCondtion","setCurrentCondtion","favoriteBtn","saveFavoriteCity","fetchCityCondition","cityName","fetch","then","res","json","data","getCityAutocomplete","e","target","value"],"sources":["C:/Users/ADMIN/Desktop/studies/myapp/src/components/HomePage.jsx"],"sourcesContent":["import React, {  useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport FiveDays from './FiveDays'\r\n\r\nexport default function HomePage(props) {\r\n\r\n  const API_KEY = 'AMn2HUVjVbYVX21t7LFEXOQMHW5cpMlS'\r\n  // const API_KEY = 'mf7ATNQVNyhudAntt7XxOxAyaRcVAS3K'\r\n  // const API_KEY = 'WebHzrX0S4ZGR1xqMmgg9s1cMgcjL6CE'\r\n  // mf7ATNQVNyhudAntt7XxOxAyaRcVAS3K\r\n  const condotion = {\r\n    WeatherText: \"Mostly sunny\",\r\n    Temperature: {\r\n      Metric: {\r\n        Value: 23.5,\r\n      }\r\n    }\r\n  }\r\n\r\n  const cityAutocomplete = {\r\n    Key: \"215854\",\r\n    LocalizedName: \"Tel Aviv\",\r\n  }\r\n\r\n  const [city, setCity] = useState(cityAutocomplete)\r\n  const [cityKey, setCityKey] = useState(cityAutocomplete.Key)\r\n  const [currentCondtion, setCurrentCondtion] = useState(condotion)\r\n\r\n  const favoriteBtn = () => {\r\n    props.saveFavoriteCity(cityKey)\r\n  }\r\n\r\n  const fetchCityCondition = (cityName) => {\r\n    fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${cityName}`)\r\n    .then((res)=>res.json())\r\n    .then((data)=>{\r\n      setCityKey(data[0].Key)\r\n      setCity(data[0])\r\n      // setCities(data) - continue with autocomplete\r\n    })\r\n\r\n    // do with useEfect - [cityKey]\r\n    // fetch(`http://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${API_KEY}`)\r\n    // .then((res)=>res.json())\r\n    // .then((data)=>setCurrentCondtion(data[0]))\r\n  }\r\n\r\n\r\n  // useEffect(()=>{\r\n  //   fetchCityCondition(\"tel aviv\")\r\n  // }, [])\r\n\r\n\r\n  const getCityAutocomplete = (e) => {\r\n    fetchCityCondition(e.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div >\r\n      <input type={'text'} onChange={getCityAutocomplete} placeholder={\"Search\"} />\r\n      <button className='largeBtn' onClick={favoriteBtn}>Add to favorite</button><br />\r\n      <Forecast title={city.LocalizedName} tempaure={currentCondtion.Temperature.Metric.Value}/>\r\n      {/* <FiveDays cityKey={cityKey} /> */}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEtC,MAAMC,OAAO,GAAG,kCAAhB,CAFsC,CAGtC;EACA;EACA;;EACA,MAAMC,SAAS,GAAG;IAChBC,WAAW,EAAE,cADG;IAEhBC,WAAW,EAAE;MACXC,MAAM,EAAE;QACNC,KAAK,EAAE;MADD;IADG;EAFG,CAAlB;EASA,MAAMC,gBAAgB,GAAG;IACvBC,GAAG,EAAE,QADkB;IAEvBC,aAAa,EAAE;EAFQ,CAAzB;EAKA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACW,gBAAD,CAAhC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAACW,gBAAgB,CAACC,GAAlB,CAAtC;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAACM,SAAD,CAAtD;;EAEA,MAAMc,WAAW,GAAG,MAAM;IACxBhB,KAAK,CAACiB,gBAAN,CAAuBL,OAAvB;EACD,CAFD;;EAIA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;IACvCC,KAAK,CAAE,8EAA6EnB,OAAQ,MAAKkB,QAAS,EAArG,CAAL,CACCE,IADD,CACOC,GAAD,IAAOA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAQ;MACZX,UAAU,CAACW,IAAI,CAAC,CAAD,CAAJ,CAAQhB,GAAT,CAAV;MACAG,OAAO,CAACa,IAAI,CAAC,CAAD,CAAL,CAAP,CAFY,CAGZ;IACD,CAND,EADuC,CASvC;IACA;IACA;IACA;EACD,CAbD,CA5BsC,CA4CtC;EACA;EACA;;;EAGA,MAAMC,mBAAmB,GAAIC,CAAD,IAAO;IACjCR,kBAAkB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;EACD,CAFD;;EAKA,oBACE;IAAA,wBACE;MAAO,IAAI,EAAE,MAAb;MAAqB,QAAQ,EAAEH,mBAA/B;MAAoD,WAAW,EAAE;IAAjE;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,SAAS,EAAC,UAAlB;MAA6B,OAAO,EAAET,WAAtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAE6E;MAAA;MAAA;MAAA;IAAA,QAF7E,eAGE,QAAC,QAAD;MAAU,KAAK,EAAEN,IAAI,CAACD,aAAtB;MAAqC,QAAQ,EAAEK,eAAe,CAACV,WAAhB,CAA4BC,MAA5B,CAAmCC;IAAlF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA9DuBP,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}
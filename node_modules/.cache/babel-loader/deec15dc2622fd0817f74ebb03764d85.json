{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\studies\\\\myapp\\\\src\\\\Component\\\\CancelPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CancelPage(props) {\n  _s();\n\n  const [validPass, setValidPass] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  const navigate = useNavigate(); // const isPassValid = (p) => p.length >= 8  ? true : false\n\n  const isPasswordValid = () => {\n    if (password == \"\" || confirmPassword == \"\") {\n      console.log(\"empty fileds\");\n      setCounter(counter + 1);\n    } else if (confirmPassword != password) {\n      console.log(\"not equal\");\n      setCounter(counter + 1);\n    } else if (password != props.user.password) {\n      console.log(\"not valid\");\n      setCounter(counter + 1);\n    } else {\n      props.changePage(\"helpbtn\");\n      console.log(\"good\");\n    } // הגבלת מספר לחיצות בעזרת אינדקס\n    // if password && confirm not empty!!\n    // if password and confirm are equal!!\n    // if password local and user password are equal \n    // if one of them is failed count it (3 tries)\n    // if (props.user.password ==)\n\n  }; // לפי הסדר הבא:\n  // תנאי ראשון: האם שדה הסיסמה ושדה האישור סיסמה רייקים\n  // תנאי שני: האם שדה הסימה ושדה אישור סיסמה שווים\n  // תנאי שלישי: האם השדות שוים לסיסמה של היוזר מעמוד הרישום\n  // תנאי רביעי: האם נעשו 3 נסיונות אם כן חסימה \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setConfirmPassword(e.target.value),\n      placeholder: \"confirm password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 115\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: validPass,\n      onClick: isPasswordValid,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: counter < 3 ? false : true,\n      onClick: isPasswordValid,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CancelPage, \"0O4q3WwCP60Anga+OkONrlXQDgU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CancelPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CancelPage\");","map":{"version":3,"names":["React","useState","useNavigate","CancelPage","props","validPass","setValidPass","confirmPassword","setConfirmPassword","password","setPassword","counter","setCounter","navigate","isPasswordValid","console","log","user","changePage","e","target","value"],"sources":["C:/Users/ADMIN/Desktop/studies/myapp/src/Component/CancelPage.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CancelPage(props) {\r\n\r\n    const [validPass, setValidPass] = useState(false)\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [counter, setCounter] = useState(0)\r\n    const navigate = useNavigate()\r\n\r\n// const isPassValid = (p) => p.length >= 8  ? true : false\r\n\r\n    const isPasswordValid = ()=> {\r\n        if(password == \"\" || confirmPassword == \"\") {\r\n            console.log(\"empty fileds\")\r\n            setCounter(counter+1)\r\n        } else if(confirmPassword != password){\r\n            console.log(\"not equal\")\r\n            setCounter(counter+1)\r\n        } else if(password != props.user.password){\r\n            console.log(\"not valid\")\r\n            setCounter(counter+1)\r\n        } else {\r\n            props.changePage(\"helpbtn\")\r\n            console.log(\"good\")\r\n        }\r\n        \r\n\r\n       \r\n        // הגבלת מספר לחיצות בעזרת אינדקס\r\n        // if password && confirm not empty!!\r\n        // if password and confirm are equal!!\r\n        // if password local and user password are equal \r\n        // if one of them is failed count it (3 tries)\r\n        // if (props.user.password ==)\r\n    }\r\n\r\n    // לפי הסדר הבא:\r\n    // תנאי ראשון: האם שדה הסיסמה ושדה האישור סיסמה רייקים\r\n    // תנאי שני: האם שדה הסימה ושדה אישור סיסמה שווים\r\n    // תנאי שלישי: האם השדות שוים לסיסמה של היוזר מעמוד הרישום\r\n    // תנאי רביעי: האם נעשו 3 נסיונות אם כן חסימה \r\n  return (\r\n    <div>\r\n        <input type=\"text\" onChange={(e)=>setPassword(e.target.value)} placeholder= {\"password\"} />\r\n        <input type=\"text\" onChange={(e)=>setConfirmPassword(e.target.value)} placeholder= {\"confirm password\"}/> <br />\r\n        <button disabled={validPass} onClick={isPasswordValid}>Cancel</button>\r\n        <button disabled={counter < 3 ? false : true} onClick={isPasswordValid}>Cancel</button>\r\n    </div>\r\n  )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EAEtC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAMY,QAAQ,GAAGX,WAAW,EAA5B,CANsC,CAQ1C;;EAEI,MAAMY,eAAe,GAAG,MAAK;IACzB,IAAGL,QAAQ,IAAI,EAAZ,IAAkBF,eAAe,IAAI,EAAxC,EAA4C;MACxCQ,OAAO,CAACC,GAAR,CAAY,cAAZ;MACAJ,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;IACH,CAHD,MAGO,IAAGJ,eAAe,IAAIE,QAAtB,EAA+B;MAClCM,OAAO,CAACC,GAAR,CAAY,WAAZ;MACAJ,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;IACH,CAHM,MAGA,IAAGF,QAAQ,IAAIL,KAAK,CAACa,IAAN,CAAWR,QAA1B,EAAmC;MACtCM,OAAO,CAACC,GAAR,CAAY,WAAZ;MACAJ,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;IACH,CAHM,MAGA;MACHP,KAAK,CAACc,UAAN,CAAiB,SAAjB;MACAH,OAAO,CAACC,GAAR,CAAY,MAAZ;IACH,CAbwB,CAiBzB;IACA;IACA;IACA;IACA;IACA;;EACH,CAvBD,CAVsC,CAmCtC;EACA;EACA;EACA;EACA;;;EACF,oBACE;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAGG,CAAD,IAAKT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7C;MAA+D,WAAW,EAAG;IAA7E;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAGF,CAAD,IAAKX,kBAAkB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAApD;MAAsE,WAAW,EAAG;IAApF;MAAA;MAAA;MAAA;IAAA,QAFJ,oBAE8G;MAAA;MAAA;MAAA;IAAA,QAF9G,eAGI;MAAQ,QAAQ,EAAEhB,SAAlB;MAA6B,OAAO,EAAES,eAAtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAQ,QAAQ,EAAEH,OAAO,GAAG,CAAV,GAAc,KAAd,GAAsB,IAAxC;MAA8C,OAAO,EAAEG,eAAvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAhDuBX,U;UAMHD,W;;;KANGC,U"},"metadata":{},"sourceType":"module"}
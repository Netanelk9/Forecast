{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\studies\\\\myapp\\\\src\\\\components\\\\RoomName.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ChooseDevice from './ChooseDevice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoomName(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [deviceCompFlag, setDeviceCompFlag] = useState(false);\n\n  const showAddDeviceComp = () => {\n    if (deviceCompFlag) {\n      return /*#__PURE__*/_jsxDEV(ChooseDevice, {\n        saveNewDevice: props.saveNewDevice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n    }\n  }; // 1\n  // add button - save the choones device on false stuts in room list\n  // please check out the validation rules\n  // dispaly the dvice as component (like room item)\n  // 2\n  // create function that changes device status (on/off) from true/false\n  // chagne by this status the BG color - in the comp use room as props and if/else to change the className(hook) \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Room Name: \", props.thisRoom.rName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Room Type: \", props.thisRoom.rType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), showAddDeviceComp(), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'submit',\n      onClick: () => setDeviceCompFlag(!deviceCompFlag),\n      value: \"Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 101\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoomName, \"zYlah8rH1DlljmwSqWHze3AqQT8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RoomName;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomName\");","map":{"version":3,"names":["React","useState","useNavigate","ChooseDevice","RoomName","props","navigate","deviceCompFlag","setDeviceCompFlag","showAddDeviceComp","saveNewDevice","thisRoom","rName","rType"],"sources":["C:/Users/ADMIN/Desktop/studies/myapp/src/components/RoomName.jsx"],"sourcesContent":["import React,  { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ChooseDevice from './ChooseDevice';\r\n\r\n\r\nexport default function RoomName(props) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [deviceCompFlag, setDeviceCompFlag] = useState(false)\r\n\r\n    const showAddDeviceComp = ()=>{\r\n        if(deviceCompFlag){\r\n            return <ChooseDevice saveNewDevice={props.saveNewDevice}/>\r\n        }\r\n    }\r\n    \r\n   \r\n\r\n    // 1\r\n    // add button - save the choones device on false stuts in room list\r\n    // please check out the validation rules\r\n    // dispaly the dvice as component (like room item)\r\n\r\n    // 2\r\n    // create function that changes device status (on/off) from true/false\r\n    // chagne by this status the BG color - in the comp use room as props and if/else to change the className(hook) \r\n\r\n    return (\r\n    <div>    \r\n        <div>Room Name: {props.thisRoom.rName}</div>\r\n        <div>Room Type: {props.thisRoom.rType}</div>\r\n        {showAddDeviceComp()}\r\n        <input type={'submit'} onClick={()=>setDeviceCompFlag(!deviceCompFlag)} value={\"Devices\"} /><br />\r\n        <button onClick={()=>navigate('/')}>Home</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EAEA,MAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;;EAEA,MAAMQ,iBAAiB,GAAG,MAAI;IAC1B,IAAGF,cAAH,EAAkB;MACd,oBAAO,QAAC,YAAD;QAAc,aAAa,EAAEF,KAAK,CAACK;MAAnC;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;EACJ,CAJD,CANoC,CAcpC;EACA;EACA;EACA;EAEA;EACA;EACA;;;EAEA,oBACA;IAAA,wBACI;MAAA,0BAAiBL,KAAK,CAACM,QAAN,CAAeC,KAAhC;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,0BAAiBP,KAAK,CAACM,QAAN,CAAeE,KAAhC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKJ,iBAAiB,EAHtB,eAII;MAAO,IAAI,EAAE,QAAb;MAAuB,OAAO,EAAE,MAAID,iBAAiB,CAAC,CAACD,cAAF,CAArD;MAAwE,KAAK,EAAE;IAA/E;MAAA;MAAA;MAAA;IAAA,QAJJ,eAIgG;MAAA;MAAA;MAAA;IAAA,QAJhG,eAKI;MAAQ,OAAO,EAAE,MAAID,QAAQ,CAAC,GAAD,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AASH;;GAhCuBF,Q;UAEHF,W;;;KAFGE,Q"},"metadata":{},"sourceType":"module"}
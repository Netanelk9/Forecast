{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\studies\\\\myapp\\\\src\\\\Component\\\\CancelPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CancelPage(props) {\n  _s();\n\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // const isPassValid = (p) => p.length >= 8  ? true : false\n\n  const isPasswordValid = () => {\n    // if(password === \"\" || confirmPassword === \"\") {\n    //     console.log(\"empty\")\n    // } else {\n    //     console.log(\"good\")\n    // }\n    if (password === \"\" || confirmPassword === \"\") {\n      console.log(\"empty\");\n    } else {\n      console.log(\"good\");\n    } // if (props.user.password ==)\n    // if password && confirm not empty!!\n    // if password and confirm are equal!!\n    // if password local and user password are equal \n    // if one of them is failed count it (3 tries)\n\n  }; // לפי הסדר הבא:\n  // תנאי ראשון: האם שדה הסיסמה ושדה האישור סיסמה רייקים\n  // תנאי שני: האם שדה הסימה ושדה אישור סיסמה שווים\n  // תנאי שלישי: האם השדות שוים לסיסמה של היוזר מעמוד הרישום\n  // תנאי רביעי: האם נעשו 3 נסיונות אם כן חסימה \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setConfirmPassword(e.target.value),\n      placeholder: \"confirm password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 115\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      on: true,\n      onClick: isPasswordValid,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CancelPage, \"HFhuwRe0bapZ6g4hVR4ee6J+QTM=\");\n\n_c = CancelPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CancelPage\");","map":{"version":3,"names":["React","useState","CancelPage","props","confirmPassword","setConfirmPassword","password","setPassword","isPasswordValid","console","log","e","target","value"],"sources":["C:/Users/ADMIN/Desktop/studies/myapp/src/Component/CancelPage.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function CancelPage(props) {\r\n\r\nconst [confirmPassword, setConfirmPassword] = useState(\"\")\r\nconst [password, setPassword] = useState(\"\")\r\n\r\n// const isPassValid = (p) => p.length >= 8  ? true : false\r\n\r\n    const isPasswordValid = ()=> {\r\n        // if(password === \"\" || confirmPassword === \"\") {\r\n        //     console.log(\"empty\")\r\n        // } else {\r\n        //     console.log(\"good\")\r\n        // }\r\n           if(password === \"\" || confirmPassword === \"\") {\r\n            console.log(\"empty\")\r\n        } else {\r\n            console.log(\"good\")\r\n        }\r\n       \r\n        \r\n        // if (props.user.password ==)\r\n        // if password && confirm not empty!!\r\n        // if password and confirm are equal!!\r\n        // if password local and user password are equal \r\n        // if one of them is failed count it (3 tries)\r\n    }\r\n\r\n    // לפי הסדר הבא:\r\n    // תנאי ראשון: האם שדה הסיסמה ושדה האישור סיסמה רייקים\r\n    // תנאי שני: האם שדה הסימה ושדה אישור סיסמה שווים\r\n    // תנאי שלישי: האם השדות שוים לסיסמה של היוזר מעמוד הרישום\r\n    // תנאי רביעי: האם נעשו 3 נסיונות אם כן חסימה \r\n  return (\r\n    <div>\r\n        <input type=\"text\" onChange={(e)=>setPassword(e.target.value)} placeholder= {\"password\"} />\r\n        <input type=\"text\" onChange={(e)=>setConfirmPassword(e.target.value)} placeholder= {\"confirm password\"}/> <br />\r\n        <button on onClick={isPasswordValid}>Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EAE1C,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CAH0C,CAK1C;;EAEI,MAAMO,eAAe,GAAG,MAAK;IACzB;IACA;IACA;IACA;IACA;IACG,IAAGF,QAAQ,KAAK,EAAb,IAAmBF,eAAe,KAAK,EAA1C,EAA8C;MAC7CK,OAAO,CAACC,GAAR,CAAY,OAAZ;IACH,CAFE,MAEI;MACHD,OAAO,CAACC,GAAR,CAAY,MAAZ;IACH,CAVwB,CAazB;IACA;IACA;IACA;IACA;;EACH,CAlBD,CAPsC,CA2BtC;EACA;EACA;EACA;EACA;;;EACF,oBACE;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAGC,CAAD,IAAKJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7C;MAA+D,WAAW,EAAG;IAA7E;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAGF,CAAD,IAAKN,kBAAkB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAApD;MAAsE,WAAW,EAAG;IAApF;MAAA;MAAA;MAAA;IAAA,QAFJ,oBAE8G;MAAA;MAAA;MAAA;IAAA,QAF9G,eAGI;MAAQ,EAAE,MAAV;MAAW,OAAO,EAAEL,eAApB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAvCuBN,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}
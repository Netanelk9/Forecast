{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\studies\\\\myapp\\\\src\\\\Component\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Title from './Title';\nimport { useNavigate } from 'react-router-dom'; // what i need before request?\n// create fetch to server route\n// reqeust method\n// body\n//  the process\n// get details\n// send reqeust\n// (sever) validate - send respons\n//  get response\n// check if true/false\n// do accordingly \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const goToHomePage = () => {\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName: userName,\n        password: password\n      })\n    }).then(response => {\n      return response.json();\n    }).then(validationResult => {\n      if (validationResult.isValid) {\n        props.setUser(userName);\n        navigate('/taskpage');\n      } else {\n        alert(\"invalid username or password\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      onChange: e => {\n        setUserName(e.target.value);\n      },\n      placeholder: \"Enter Your UserName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 115\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'password',\n      onChange: e => {\n        setPassword(e.target.value);\n      },\n      placeholder: \"Enter Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 120\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"largeBtn\",\n      onClick: goToHomePage,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"j6OAQD0qrY/BVyleF9yzYThBz7Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Title","useNavigate","Login","props","navigate","userName","setUserName","password","setPassword","goToHomePage","fetch","method","headers","body","JSON","stringify","then","response","json","validationResult","isValid","setUser","alert","e","target","value"],"sources":["C:/Users/ADMIN/Desktop/studies/myapp/src/Component/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Title from './Title';\r\nimport { useNavigate } from 'react-router-dom';\r\n// what i need before request?\r\n// create fetch to server route\r\n// reqeust method\r\n// body\r\n\r\n//  the process\r\n// get details\r\n// send reqeust\r\n// (sever) validate - send respons\r\n//  get response\r\n// check if true/false\r\n// do accordingly \r\n\r\n\r\nexport default function Login(props) {\r\nconst navigate = useNavigate()\r\nconst [userName, setUserName] = useState(\"\")\r\nconst [password, setPassword] = useState(\"\")\r\n\r\n\r\n\r\n\r\n\r\n  const goToHomePage = ()=> {\r\n    fetch('/login',{\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type':'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userName: userName,\r\n        password:password\r\n      })\r\n    })\r\n    .then( (response)=> { return response.json() })\r\n    .then( (validationResult)=>{\r\n      if(validationResult.isValid) {\r\n        props.setUser(userName)\r\n        navigate('/taskpage')\r\n      } else {\r\n        alert(\"invalid username or password\")\r\n      }\r\n    } )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Title text = {\"Login\"}/>\r\n        <input type={'text'} onChange={(e)=>{setUserName(e.target.value)}} placeholder={\"Enter Your UserName\"} /> <br />\r\n        <input type={'password'}  onChange={(e)=>{setPassword(e.target.value)}} placeholder={\"Enter Your Password\"} /> <br />\r\n        <button className='largeBtn' onClick={goToHomePage}>Login</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EACrC,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;EAME,MAAMU,YAAY,GAAG,MAAK;IACxBC,KAAK,CAAC,QAAD,EAAU;MACbC,MAAM,EAAE,MADK;MAEbC,OAAO,EAAE;QACP,gBAAe;MADR,CAFI;MAKbC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBV,QAAQ,EAAEA,QADS;QAEnBE,QAAQ,EAACA;MAFU,CAAf;IALO,CAAV,CAAL,CAUCS,IAVD,CAUQC,QAAD,IAAa;MAAE,OAAOA,QAAQ,CAACC,IAAT,EAAP;IAAwB,CAV9C,EAWCF,IAXD,CAWQG,gBAAD,IAAoB;MACzB,IAAGA,gBAAgB,CAACC,OAApB,EAA6B;QAC3BjB,KAAK,CAACkB,OAAN,CAAchB,QAAd;QACAD,QAAQ,CAAC,WAAD,CAAR;MACD,CAHD,MAGO;QACLkB,KAAK,CAAC,8BAAD,CAAL;MACD;IACF,CAlBD;EAmBD,CApBD;;EAwBA,oBACE;IAAA,wBACI,QAAC,KAAD;MAAO,IAAI,EAAI;IAAf;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,IAAI,EAAE,MAAb;MAAqB,QAAQ,EAAGC,CAAD,IAAK;QAACjB,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;MAA4B,CAAjE;MAAmE,WAAW,EAAE;IAAhF;MAAA;MAAA;MAAA;IAAA,QAFJ,oBAE8G;MAAA;MAAA;MAAA;IAAA,QAF9G,eAGI;MAAO,IAAI,EAAE,UAAb;MAA0B,QAAQ,EAAGF,CAAD,IAAK;QAACf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;MAA4B,CAAtE;MAAwE,WAAW,EAAE;IAArF;MAAA;MAAA;MAAA;IAAA,QAHJ,oBAGmH;MAAA;MAAA;MAAA;IAAA,QAHnH,eAII;MAAQ,SAAS,EAAC,UAAlB;MAA6B,OAAO,EAAEhB,YAAtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA1CuBP,K;UACPD,W;;;KADOC,K"},"metadata":{},"sourceType":"module"}
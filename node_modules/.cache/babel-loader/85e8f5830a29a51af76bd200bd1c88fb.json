{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\studies\\\\myapp\\\\src\\\\components\\\\Thegame.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLinkClickHandler } from 'react-router-dom';\nimport Endgame from './Endgame';\nimport Title from './Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Thegame(props) {\n  _s();\n\n  // add the next hooks - player and computer: deck, cardIndex, score\n  const [compDeck, setCompDeck] = useState([]);\n  const [playerDeck, setPlayerDeck] = useState([]);\n  const [cardIndex, setCardIndex] = useState(20);\n  const [gameScore, setGameScore] = useState({\n    player: 0,\n    comp: 0\n  });\n  const [endGame, setEndGame] = useState(\"endGame\"); // fucntions - createDecks, nextCard, checkRoundWin, gameWinner\n\n  const createDecks = () => {\n    // loop generate 52 cards in array\n    let cardArr = [];\n\n    for (let card = 1; card <= 13; card++) {\n      for (let i = 0; i < 4; i++) {\n        cardArr.push(card);\n      }\n    }\n\n    console.log(cardArr); // for(let i=1, j=1, card=1; i<=52; i++, j++) {\n    //   cardArr.push(card)\n    //   if(j == 4) {\n    //     j = 0\n    //     card++\n    //   }\n    // }\n\n    let pCards = [];\n    let cCards = [];\n    let rnd;\n\n    while (cardArr.length > 0) {\n      rnd = Math.floor(Math.random() * cardArr.length);\n      pCards.push(cardArr[rnd]);\n      cardArr.splice(rnd, 1);\n      rnd = Math.floor(Math.random() * cardArr.length);\n      cCards.push(cardArr[rnd]);\n      cardArr.splice(rnd, 1);\n    }\n\n    setCompDeck(cCards);\n    setPlayerDeck(pCards); // setPlayerScore(cCards(rnd)+1)\n    // setCompScore.map(cCards.push(cardArr[rnd]))\n\n    console.log(pCards);\n    console.log(cCards);\n  };\n\n  const changePages = endPage => {\n    setEndGame(endPage);\n  };\n\n  const hitButton = () => {\n    if (compDeck.length - 1 < cardIndex + 1) {\n      // 25 < 26\n      props.changePages(\"endGame\");\n    }\n\n    setCardIndex(cardIndex + 1);\n\n    if (compDeck[cardIndex] < playerDeck[cardIndex]) {\n      setGameScore({\n        player: gameScore.player + 1,\n        comp: gameScore.comp\n      });\n    } else if (compDeck[cardIndex] > playerDeck[cardIndex]) {\n      setGameScore({\n        comp: gameScore.comp + 1,\n        player: gameScore.player\n      });\n    }\n  };\n\n  const swichToEndGame = () => {\n    switch (endGame) {\n      case \"endGame\":\n        return /*#__PURE__*/_jsxDEV(Endgame, {\n          changePages: changePages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"WAR!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Round: \", cardIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Comp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: compDeck[cardIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: playerDeck[cardIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hitButton,\n      children: \"Hit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createDecks,\n      children: \"Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 51\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 57\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ScoreBoard:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"     player: \", gameScore.player, \"-VS-\", gameScore.comp, \" :comp     \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), swichToEndGame()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Thegame, \"tdxnpkyjjqKVllHMZ1y5Ff9SIAk=\");\n\n_c = Thegame;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thegame\");","map":{"version":3,"names":["React","useState","useLinkClickHandler","Endgame","Title","Thegame","props","compDeck","setCompDeck","playerDeck","setPlayerDeck","cardIndex","setCardIndex","gameScore","setGameScore","player","comp","endGame","setEndGame","createDecks","cardArr","card","i","push","console","log","pCards","cCards","rnd","length","Math","floor","random","splice","changePages","endPage","hitButton","swichToEndGame"],"sources":["C:/Users/ADMIN/Desktop/studies/myapp/src/components/Thegame.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { useLinkClickHandler } from 'react-router-dom'\r\nimport Endgame from './Endgame'\r\nimport Title from './Title'\r\n\r\nexport default function Thegame(props) {\r\n\r\n  // add the next hooks - player and computer: deck, cardIndex, score\r\n  const [compDeck, setCompDeck] = useState([])\r\n  const [playerDeck, setPlayerDeck] = useState([])\r\n  const [cardIndex, setCardIndex] = useState(20)\r\n  const [gameScore, setGameScore] = useState({ player: 0, comp: 0})\r\n  const [endGame, setEndGame] = useState(\"endGame\")\r\n\r\n  // fucntions - createDecks, nextCard, checkRoundWin, gameWinner\r\n  const createDecks = () => {\r\n    // loop generate 52 cards in array\r\n    let cardArr = [];\r\n    for(let card=1; card<=13; card++) {\r\n      for(let i=0; i<4; i++) {\r\n        cardArr.push(card)\r\n      }\r\n    }\r\n    console.log(cardArr);\r\n    // for(let i=1, j=1, card=1; i<=52; i++, j++) {\r\n      //   cardArr.push(card)\r\n      //   if(j == 4) {\r\n        //     j = 0\r\n        //     card++\r\n        //   }\r\n        // }\r\n        \r\n        let pCards = []\r\n        let cCards = []\r\n        let rnd;\r\n        while(cardArr.length > 0) {\r\n          rnd = Math.floor(Math.random() * cardArr.length)\r\n          pCards.push(cardArr[rnd])\r\n          cardArr.splice(rnd, 1)\r\n          \r\n          rnd = Math.floor(Math.random() * cardArr.length)\r\n          cCards.push(cardArr[rnd])\r\n          cardArr.splice(rnd, 1) \r\n        }\r\n        \r\n        setCompDeck(cCards)\r\n        setPlayerDeck(pCards)\r\n        // setPlayerScore(cCards(rnd)+1)\r\n        // setCompScore.map(cCards.push(cardArr[rnd]))\r\n\r\n\r\n        console.log(pCards);\r\n        console.log(cCards);\r\n    \r\n  }\r\n  const changePages = (endPage) => {setEndGame(endPage)}\r\n\r\n  const hitButton = () => {\r\n    if(compDeck.length -1 < cardIndex + 1){ // 25 < 26\r\n      props.changePages(\"endGame\")\r\n    }\r\n    setCardIndex(cardIndex + 1)\r\n    if(compDeck[cardIndex] < playerDeck[cardIndex]) {\r\n      setGameScore({ player: gameScore.player + 1, comp: gameScore.comp })\r\n    } else if (compDeck[cardIndex] > playerDeck[cardIndex]) {\r\n        setGameScore({comp: gameScore.comp + 1, player: gameScore.player})\r\n    }\r\n     \r\n  }\r\n  \r\n\r\n\r\n\r\n  const swichToEndGame = () => {\r\n  switch (endGame) {\r\n    case \"endGame\":\r\n      \r\n      return <Endgame changePages={changePages}/>\r\n  \r\n    default:\r\n      break;\r\n  }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Title text={\"WAR!\"} />\r\n      <div>Round: {cardIndex+1}</div>\r\n      <div>Comp</div>\r\n      <div>{compDeck[cardIndex]}</div>\r\n      <div>Player</div>\r\n      <div>{playerDeck[cardIndex]}</div>\r\n      \r\n      <button onClick={hitButton}>Hit</button>\r\n      <button onClick={createDecks}>Deck</button> <br /><br />\r\n    \r\n      <div>ScoreBoard:</div>\r\n      <div>     player: {gameScore.player}-VS-{gameScore.comp} :comp     </div>\r\n      {swichToEndGame()}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EAErC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;IAAEc,MAAM,EAAE,CAAV;IAAaC,IAAI,EAAE;EAAnB,CAAD,CAA1C;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,SAAD,CAAtC,CAPqC,CASrC;;EACA,MAAMkB,WAAW,GAAG,MAAM;IACxB;IACA,IAAIC,OAAO,GAAG,EAAd;;IACA,KAAI,IAAIC,IAAI,GAAC,CAAb,EAAgBA,IAAI,IAAE,EAAtB,EAA0BA,IAAI,EAA9B,EAAkC;MAChC,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAuB;QACrBF,OAAO,CAACG,IAAR,CAAaF,IAAb;MACD;IACF;;IACDG,OAAO,CAACC,GAAR,CAAYL,OAAZ,EARwB,CASxB;IACE;IACA;IACE;IACA;IACA;IACA;;IAEA,IAAIM,MAAM,GAAG,EAAb;IACA,IAAIC,MAAM,GAAG,EAAb;IACA,IAAIC,GAAJ;;IACA,OAAMR,OAAO,CAACS,MAAR,GAAiB,CAAvB,EAA0B;MACxBD,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,OAAO,CAACS,MAAnC,CAAN;MACAH,MAAM,CAACH,IAAP,CAAYH,OAAO,CAACQ,GAAD,CAAnB;MACAR,OAAO,CAACa,MAAR,CAAeL,GAAf,EAAoB,CAApB;MAEAA,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,OAAO,CAACS,MAAnC,CAAN;MACAF,MAAM,CAACJ,IAAP,CAAYH,OAAO,CAACQ,GAAD,CAAnB;MACAR,OAAO,CAACa,MAAR,CAAeL,GAAf,EAAoB,CAApB;IACD;;IAEDpB,WAAW,CAACmB,MAAD,CAAX;IACAjB,aAAa,CAACgB,MAAD,CAAb,CA/BoB,CAgCpB;IACA;;IAGAF,OAAO,CAACC,GAAR,CAAYC,MAAZ;IACAF,OAAO,CAACC,GAAR,CAAYE,MAAZ;EAEL,CAvCD;;EAwCA,MAAMO,WAAW,GAAIC,OAAD,IAAa;IAACjB,UAAU,CAACiB,OAAD,CAAV;EAAoB,CAAtD;;EAEA,MAAMC,SAAS,GAAG,MAAM;IACtB,IAAG7B,QAAQ,CAACsB,MAAT,GAAiB,CAAjB,GAAqBlB,SAAS,GAAG,CAApC,EAAsC;MAAE;MACtCL,KAAK,CAAC4B,WAAN,CAAkB,SAAlB;IACD;;IACDtB,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;;IACA,IAAGJ,QAAQ,CAACI,SAAD,CAAR,GAAsBF,UAAU,CAACE,SAAD,CAAnC,EAAgD;MAC9CG,YAAY,CAAC;QAAEC,MAAM,EAAEF,SAAS,CAACE,MAAV,GAAmB,CAA7B;QAAgCC,IAAI,EAAEH,SAAS,CAACG;MAAhD,CAAD,CAAZ;IACD,CAFD,MAEO,IAAIT,QAAQ,CAACI,SAAD,CAAR,GAAsBF,UAAU,CAACE,SAAD,CAApC,EAAiD;MACpDG,YAAY,CAAC;QAACE,IAAI,EAAEH,SAAS,CAACG,IAAV,GAAiB,CAAxB;QAA2BD,MAAM,EAAEF,SAAS,CAACE;MAA7C,CAAD,CAAZ;IACH;EAEF,CAXD;;EAgBA,MAAMsB,cAAc,GAAG,MAAM;IAC7B,QAAQpB,OAAR;MACE,KAAK,SAAL;QAEE,oBAAO,QAAC,OAAD;UAAS,WAAW,EAAEiB;QAAtB;UAAA;UAAA;UAAA;QAAA,QAAP;;MAEF;QACE;IANJ;EAQC,CATD;;EAaA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,IAAI,EAAE;IAAb;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,sBAAavB,SAAS,GAAC,CAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,UAAMJ,QAAQ,CAACI,SAAD;IAAd;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAA,UAAMF,UAAU,CAACE,SAAD;IAAhB;MAAA;MAAA;MAAA;IAAA,QANF,eAQE;MAAQ,OAAO,EAAEyB,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MAAQ,OAAO,EAAEjB,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,oBAS8C;MAAA;MAAA;MAAA;IAAA,QAT9C,eASoD;MAAA;MAAA;MAAA;IAAA,QATpD,eAWE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAYE;MAAA,4BAAmBN,SAAS,CAACE,MAA7B,UAAyCF,SAAS,CAACG,IAAnD;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF,EAaGqB,cAAc,EAbjB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAlGuBhC,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}